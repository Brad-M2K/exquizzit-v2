// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  email            String   @unique
  userName         String?
  avatar           String?
  highScore        Int      @default(0)
  quizzBuckTotal   Int      @default(0)
  questionsCorrect Int      @default(0)
  createdAt        DateTime @default(now())
  games            Game[]

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model Game {
  id        String   @id @default(uuid())
  score     Int
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("games")
}

model Question {
  id            String   @id @default(uuid())
  questionText  String
  correctAnswer String
  wrongAnswers  String[] // Or a JSON array if needed
  topic         String // e.g. "Geography"
  difficulty    String // "easy", "medium", "hard"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}
